sudo: false

language: haskell

addons:
  apt:
    sources:
      - hvr-ghc
    packages:
      - ghc-7.6.3
      - ghc-7.8.4
      - ghc-7.10.1
      - cabal-install-1.22
      # test dependencies
      - expect
      - cppcheck

env:
  - GHC="7.6.3"  TESTS="doc"
  - GHC="7.6.3"  TESTS="lib_doc"
  - GHC="7.6.3"  TESTS="test_c"
  - GHC="7.6.3"  TESTS="test_js"
  - GHC="7.8.4"  TESTS="doc"
  - GHC="7.8.4"  TESTS="lib_doc"
  - GHC="7.8.4"  TESTS="test_c"
  - GHC="7.8.4"  TESTS="test_js"
  - GHC="7.10.1" TESTS="doc"
  - GHC="7.10.1" TESTS="lib_doc"
  - GHC="7.10.1" TESTS="test_c"
  - GHC="7.10.1" TESTS="test_js"

matrix:
  allow_failures:
    - env: GHC="7.10.1" TESTS="doc"
    - env: GHC="7.10.1" TESTS="lib_doc"
    - env: GHC="7.10.1" TESTS="test_c"
    - env: GHC="7.10.1" TESTS="test_js"

before_install:
  - export CABAL="1.22"
  - export PATH=/opt/ghc/$GHC/bin:/opt/cabal/$CABAL/bin:$PATH
  - cabal --version
  - ghc --version
  - cabal update
install:
  # haddock dependencies
  - cabal install hscolour
  - cabal install -f FFI --enable-tests --dependencies-only --max-backjumps=-1
  - ghc-pkg list
before_script:
  - cabal sdist
  - cd ..
  - tar -xf Idris-dev/dist/idris*.tar.gz
  - cd idris*
script:
  - cabal configure -f FFI -f CI
  - if [[ "$TESTS" != "doc" ]]; then cabal build; fi
  - if [[ "$TESTS" != "doc" ]]; then cabal copy; fi
  - if [[ "$TESTS" != "doc" ]]; then cabal register; fi
  - if [[ "$TESTS" == "test_c" ]]; then cppcheck -j 2 --error-exitcode=1 ./rts/idris_bitstring.c ./rts/idris_bitstring.h ./rts/idris_gc.h ./rts/idris_gc.c ./rts/idris_gmp.h ./rts/idris_gmp.c ./rts/idris_heap.h ./rts/idris_heap.c ./rts/idris_main.c ./rts/idris_net.h ./rts/idris_net.c ./rts/idris_opts.h ./rts/idris_opts.c ./rts/idris_rts.h ./rts/idris_rts.c ./rts/idris_stats.h ./rts/idris_stats.c ./rts/idris_stdfgn.h ./rts/idris_stdfgn.c ./rts/libtest.c ; fi
  - if [[ "$TESTS" == "test_llvm" ]]; then git clone --depth 1 https://github.com/idris-hackers/idris-llvm.git ; cd idris-llvm ; cabal install ; cd .. ; fi
  - make -j2 $TESTS
