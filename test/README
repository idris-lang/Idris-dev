Tests:

001: Well-typed interpreter
002: Universe checking
003: Literate source and string processing
004: File operations
005: Num class resolution [regression]; span & break; ad-hoc overloading
006: Provisional definitions; class resolution in patterns
007: Applicative and idiom brackets
008: case and pattern matching let
009: ranges and list monad
010: total
011: record projection and update
012: various error regressions
013: binding syntax
014: resource DSL
015: verified binary adder
016: codata
017: mutually recursive totality checking
018: Message passing concurrency (raw form)
019: magic with
020: implicit conversions
021: effects
022: dynamic C library loading and interpreter IO
023: trivial (non-I/O) type providers
024: interpreter I/O
025: memory effects
026: simple file-I/O-based type provider

regxxx: various regression tests
