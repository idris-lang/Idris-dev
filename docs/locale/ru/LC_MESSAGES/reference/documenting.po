# 
msgid ""
msgstr ""
"Project-Id-Version: Idris 0.9.17\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-05-20 17:05+0400\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ..\..\reference\documenting.rst:5
msgid "Documenting Idris Code"
msgstr ""

#: ..\..\reference\documenting.rst:7
msgid ""
"Idris documentation comes in two major forms: comments, which exist for a "
"reader’s edification and are ignored by the compiler, and inline API "
"documentation, which the compiler parses and stores for future reference. To"
" consult the documentation for a declaration ``f``, write ``:doc f`` at the "
"REPL or use the appropriate command in your editor (``C-c C-d`` in Emacs, in"
" Vim)."
msgstr ""

#: ..\..\reference\documenting.rst:15
msgid "Comments"
msgstr ""

#: ..\..\reference\documenting.rst:17
msgid ""
"Use comments to explain why code is written the way that it is. Idris’s "
"comment syntax is the same as that of Haskell: lines beginning with ``--`` "
"are comments, and regions bracketed by ``{-`` and ``-}`` are comments even "
"if they extend across multiple lines. These can be used to comment out lines"
" of code or provide simple documentation for the readers of Idris code."
msgstr ""

#: ..\..\reference\documenting.rst:25
msgid "Inline Documentation"
msgstr ""

#: ..\..\reference\documenting.rst:27
msgid ""
"Idris also supports a comprehensive and rich inline syntax for Idris code to"
" be generated. This syntax also allows for named parameters and variables "
"within type signatures to be individually annotated using a syntax similar "
"to Javadoc parameter annotations."
msgstr ""

#: ..\..\reference\documenting.rst:32
msgid ""
"Documentation always comes before the declaration being documented. Inline "
"documentation applies to either top-level declarations or to constructors. "
"Documentation for specific arguments to constructors, type constructors, or "
"functions can be associated with these arguments using their names."
msgstr ""

#: ..\..\reference\documenting.rst:38
msgid ""
"The inline documentation for a declaration is an unbroken string of lines, "
"each of which begins with ``|||`` (three pipe symbols). The first paragraph "
"of the documentation is taken to be an overview, and in some contexts, only "
"this overview will be shown. After the documentation for the declaration as "
"a whole, it is possible to associate documetation with specific named "
"parameters, which can either be explicitly name or the results of converting"
" free variables to implicit parameters.  Annotations are the same as with "
"Javadoc annotations, that is for the named parameter ``(n : T)``, the "
"corresponding annotation is ``||| @ n Some description`` that is placed "
"before the declaration."
msgstr ""

#: ..\..\reference\documenting.rst:50
msgid ""
"Documentation is written in Markdown, though not all contexts will display "
"all possible formatting (for example, images are not displayed when viewing "
"documentation in the REPL, and only some terminals render italics "
"correctly). A comprehensive set of examples is given below."
msgstr ""
